#:kivy 1.6.0
#:import main main
#:import la kivy.adapters.listadapter
#:import lv kivy.uix.listview

<SaveQuery>
    orientation: 'vertical'
    collections_list: collections
    ListView:
        id: collections
        scroll_distance: 5
        scroll_timeout: 250
    
    Widget:
        size_hint:(1.,None)
        height: (2,'sp')
        canvas:
            Color:
                rgb: (0.195,0.641,0.805)
            Line:
                points: [self.x + 0.05*self.width, self.y + 0.5*self.height, self.x + 0.95*self.width, self.y + 0.5*self.height]
                width: 2
                cap: 'square'
    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1.,0.1)
        Button:
            size_hint: (0.5,1.)
            text: 'Cancel'
            on_press: root.popup.dismiss()
        Button:
            size_hint: (0.5,1.)
            text: 'Save in selected collection'
            on_release: root.board.make_savefile_in_dir(collections.adapter.selection[0].coldir)

<CollectionsIndex>:
    id: ci
    collections_list: collections
    orientation: 'vertical'

    ListView:
        id: collections
        scroll_distance: 5
        scroll_timeout: 250
    
    Widget:
        size_hint:(1.,None)
        height: (2,'sp')
        canvas:
            Color:
                rgb: (0.195,0.641,0.805)
            Line:
                points: [self.x + 0.05*self.width, self.y + 0.5*self.height, self.x + 0.95*self.width, self.y + 0.5*self.height]
                width: 2
                cap: 'square'
    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1.,0.1)
        Button:
            size_hint: (0.25,1.)
            text: 'Back'
            on_press: root.managedby.go_back()
            background_normal: 'black_pixel.png'
            background_down: 'blue_press_pixel.png'
        Button:
            size_hint: (0.75,1.)
            text: 'View selected collection'
            on_release: root.managedby.view_or_open_collection(collections.adapter.selection)
            background_normal: 'black_pixel.png'
            background_down: 'blue_press_pixel.png'

<PrintyButton>:
    text: ''

<MySpinnerOption>:
    height: (60,'sp')

<GameInfo>:
    orientation: 'vertical'
    do_scroll_x: False

    ScrollView:
        BoxLayout:
            orientation: 'vertical'
            size_hint_y: None
            height: (300,'sp')
            BoxLayout:
                orientation: 'horizontal'
                Label:
                    text: 'W player:'
                    textsize: self.size
                    halign: 'left'
                    valign: 'middle'
                    size_hint: (0.65,1.)
                Label:
                    text: 'W rank:'
                    size_hint: (0.35,1.)
            BoxLayout:
                orientation: 'horizontal'
                TextInput:
                    id: wname_text
                    text: root.wname
                    multiline: False
                    size_hint: (0.65,1.)
                TextInput:
                    id: wrank_text
                    text: root.wrank
                    multiline: False
                    size_hint: (0.35,1.)
            BoxLayout:
                orientation: 'horizontal'
                Label:
                    text: 'B player:'
                    size_hint: (0.65,1.)
                Label:
                    text: 'B rank:'
                    size_hint: (0.35,1.)
            BoxLayout:
                orientation: 'horizontal'
                TextInput:
                    id: bname_text
                    text: root.bname
                    multiline: False
                    size_hint: (0.65,1.)
                TextInput:
                    id: brank_text
                    text: root.brank
                    multiline: False
                    size_hint: (0.35,1.)
            BoxLayout:
                orientation: 'horizontal'
                Label:
                    text: 'Komi:'
                Label:
                    text: 'Result:'
            BoxLayout:
                orientation: 'horizontal'
                TextInput:
                    id: komi_text
                    text: root.komi
                    multiline: False
                TextInput:
                    id: result_text
                    text: root.result
                    multiline: False
            Label:
                text: 'Event:'
            TextInput:
                id: event_text
                text: root.event
                multiline: False
    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: (60,'sp')
        Button:
            text: 'Cancel'
            on_press: root.popup.dismiss()
        Button:
            text: 'Submit'
            on_release: root.popup.dismiss()
            on_press: root.board.set_game_info({'wname':wname_text.text,'wrank':wrank_text.text,'bname':bname_text.text,'brank':brank_text.text,'komi':komi_text.text,'result':result_text.text,'event':event_text.text})
     
        
        
    

<GuessPopup>
    canvas:
        Color:
            rgba: [self.colour[0],self.colour[1],self.colour[2],self.alpha]
        Rectangle:
            pos: self.pos
            size: self.size

<StandaloneGameChooser>:
    id: sgc
    orientation: 'vertical'
    gameslist: gl
    Label:
        height: 30,'sp'
        size_hint_y: None
        text: self.parent.name + ' Collection'
        font_size: (25,'sp')
        textsize: self.size
        valign: 'middle'
    Widget:
        size_hint:(1.,None)
        height: (2,'sp')
        canvas:
            Color:
                rgb: (0.195,0.641,0.805)
            Line:
                points: [self.x + 0.05*self.width, self.y + 0.5*self.height, self.x + 0.95*self.width, self.y + 0.5*self.height]
                width: 2
                cap: 'square'
    ListView:
        id: gl
        scroll_distance: 5
        scroll_timeout: 250
    Widget:
        size_hint:(1.,None)
        height: (2,'sp')
        canvas:
            Color:
                rgb: (0.195,0.641,0.805)
            Line:
                points: [self.x + 0.05*self.width, self.y + 0.5*self.height, self.x + 0.95*self.width, self.y + 0.5*self.height]
                width: 2
                cap: 'square'
    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1.,0.1)
        Button:
            size_hint: (0.25,1.)
            text: 'Back'
            on_press: sgc.managedby.go_back()
        Button:
            size_hint: (0.75,1.)
            text: 'Open selected game'
            on_press: root.managedby.board_from_gamechooser(gl.adapter.selection)

<CollectionChooserButton>:
    height: (50,'sp')
    size_hint: 1.,None
    BoxLayout:
        pos: self.parent.pos
        size: self.parent.size
        orientation: 'vertical'
        Label:
            text: '%s (%d games)' % (root.colname, root.numentries)
            textsize: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            text: root.coldir
            textsize: self.size
            halign: 'left'
            valign: 'middle'
        Widget:
            size_hint:(1.,None)
            height: (2,'sp')
            canvas:
                Color:
                    rgb: (0.195,0.641,0.805)
                Line:
                    points: [self.x + 0.05*self.width, self.y + 0.5*self.height, self.x + 0.95*self.width, self.y + 0.5*self.height]
                    width: 1
                    cap: 'square'
            

<OpenChooserButton>:
    size_hint_y: None
    height: (90,'sp')
    BoxLayout:
        size: self.parent.size
        pos: self.parent.pos
        orientation: 'vertical'
        Label:
            padding: (-10,0)
            text: root.wname + ' vs ' + root.bname
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            padding: (-10,0)
            text: root.date
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            padding: (-10,0)
            text: root.filepath
            text_size: self.size
            halign: 'left'
            valign: 'middle'
    

<GameChooserButton>:
    info: gamechooser
    GameChooserInfo:
        size: self.parent.size
        pos: self.parent.pos
        id: gamechooser
        filepath: self.parent.filepath
        bname: self.parent.bname
        wname: self.parent.wname
        brank: self.parent.brank
        wrank: self.parent.wrank
        result: self.parent.result
        date: self.parent.date


<GameChooserInfo>:
    id: gc
    orientation: 'vertical'
    BoxLayout:
        orientation: 'horizontal'
        WhiteStoneImage:
            size: self.parent.height,self.parent.height
            size_hint: None,None
        Label:
            size_hint: (0.65,1.)
            text: gc.wname + ' ' + gc.wrank
            text_size: self.width-10,self.height
            halign: 'left'
            valign: 'middle'
            markup: True
        Label:
            size_hint: (0.35,1.)
            text: gc.date
            text_size: self.width-10,self.height
            halign: 'right'
            valign: 'middle'
    BoxLayout:
        orientation: 'horizontal'
        BlackStoneImage:
            size: self.parent.height,self.parent.height
            size_hint: None, None
        Label:
            size_hint: (0.65,1.)
            text: gc.bname + ' ' + gc.brank
            text_size: self.width-10,self.height
            halign: 'left'
            valign: 'middle'
            markup: True
        Label:
            size_hint: (0.35,1.)
            text: gc.result
            text_size: self.width-10,self.height
            halign: 'right'
            valign: 'middle'
    BoxLayout:
        orientation: 'horizontal'
        Label:
            text: gc.filepath
            text_size: self.width-20,self.height
            halign: 'left'
            valign: 'middle'
    Widget:
        size_hint_y: None
        height: (2,'sp')
        canvas:
            Color:
                rgb: (0.195,0.641,0.805)
            Line:
                points: [self.x + 0.05*self.width, self.y + 0.5*self.height, self.x + 0.95*self.width, self.y + 0.5*self.height]
                width: 1

         

        

<WhiteStoneImage>:
    canvas:
        Color:
            rgba: (0.2,0.2,0.2,1)
        Ellipse:
            pos: self.pos[0] + 0.1*self.width, self.pos[1] + 0.1*self.height
            size: (0.8*self.height,0.8*self.height)
        Color:
            rgb: (1,1,1)
        Ellipse:
            pos: self.pos[0] + 0.15*self.width, self.pos[1] + 0.15*self.height
            size: (0.7*self.height,0.7*self.height)

<BlackStoneImage>:
    canvas:
        Color:
            rgba: (0.8,0.8,0.8,1)
        Ellipse:
            pos: self.pos[0] + 0.1*self.width, self.pos[1] + 0.1*self.height
            size: (0.8*self.height,0.8*self.height)
        Color:
            rgb: (0,0,0)
        Ellipse:
            pos: self.pos[0] + 0.15*self.width, self.pos[1] + 0.15*self.height
            size: (0.7*self.height,0.7*self.height)


<NextButton>:
    canvas:
        Color:
            rgb: (0.9,0.9,0.9)
        Line:
            points: [self.x + 0.5*self.width - 5, self.y + 0.5*self.height - 10, self.x + 0.5*self.width + 5, self.y + 0.5*self.height, self.x + 0.5*self.width - 5, self.y + 0.5*self.height + 10]
            width: 2
            cap: 'square'
            joint: 'miter'

<PrevButton>:
    canvas:
        Color:
            rgb: (0.9,0.9,0.9)
        Line:
            points: [self.x + 0.5*self.width + 5, self.y + 0.5*self.height - 10, self.x + 0.5*self.width - 5, self.y + 0.5*self.height, self.x + 0.5*self.width + 5, self.y + 0.5*self.height + 10]
            width: 2
            cap: 'square'
            joint: 'miter'
           
<CommentInput>:
    orientation: 'vertical'

    TextInput:
        id: commentinput
        text: self.parent.comment
        size_hint: (1.,0.9)
        focus: True
    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1.,0.1)
        Button:
            text: 'Cancel'
            on_press: self.parent.parent.popup.dismiss()
        Button:
            text: 'Submit'
            on_press: self.parent.parent.board.set_new_comment(commentinput.text)
            on_release: self.parent.parent.popup.dismiss()

<MakeMoveMarker>:
    pos: self.set_position_from_coord(self.coord)
    size: self.board.stonesize
    canvas:
        Color:
            rgba: self.colour
        Ellipse:
            pos: self.pos
            size: self.size
        Color:
            rgb: (0.095,0,0.434)
        Line:
            points: [self.board.x,self.y + 0.5*self.height,self.board.x + self.board.width,self.y + 0.5*self.height]
            width: 2.
            cap: 'none'
        Line:
            points: [self.x + 0.5*self.width,self.board.y,self.x + 0.5*self.width,self.board.y + self.board.height]
            width: 2.
            cap: 'none'
        
        

<HomeScreen>:
    id: homeroot
    orientation: 'vertical'
    gamesview: opengames
    pb: pb

    Image:
        size_hint: ((1.,0.2))
        mipmap: True
        source: 'logo-1.png'

    GridLayout:
        cols: 3
        size_hint: (1.,0.25)
        Button:
            text: 'Game collections'
            on_press: homeroot.managedby.switch_and_set_back('Collections Index')
            background_normal: 'black_pixel.png'
            background_down: 'blue_press_pixel.png'
        Button:
            text: 'New board'
            on_release: homeroot.managedby.new_board()
            background_normal: 'black_pixel.png'
            background_down: 'blue_press_pixel.png'
                
        Button:
            text: 'Open SGF from file'
            on_release: homeroot.managedby.open_sgf_dialog()
            background_normal: 'black_pixel.png'
            background_down: 'blue_press_pixel.png'
    Widget:
        size_hint_y: None
        height: (2,'sp')
        canvas:
            Color:
                rgb: (0.195,0.641,0.805)
            Line:
                points: [self.x + 0.05*self.width, self.y + 0.5*self.height, self.x + 0.95*self.width, self.y + 0.5*self.height]
                width: 2
    Label:
        text: 'Currently open games:'
        size_hint: (1.,0.05)
    MyListView:
        id: opengames
        scroll_distance: 5
        scroll_timeout: 250
        size_hint: (1.,0.60)
        adapter: la.ListAdapter(data=root.managedby.boards,args_converter = lambda c,j: main.get_game_chooser_info_from_boardname(root.managedby,j), selection_mode='single', allow_empty_selection=True,cls=main.OpenChooserButton)
        selection: self.adapter.selection
    BoxLayout:
        size_hint: (1.,0.1)
        orientation: 'horizontal'
        Button:
            text: '???'
        PrintyButton:
            id: pb
            text: 'Switch to selected game.'
            on_release: root.managedby.set_current_from_opengameslist(opengames.adapter.selection)

<PhoneBoardView>:
    boardcontainer: bc
    board: bc.board
    spinner: navspinner

    orientation: 'vertical'

    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1.,0.08)

        Button:
            size_hint: (0.15,1.0)
            on_release: self.parent.parent.managedby.go_home()
            background_normal: 'black_pixel.png'
            background_down: 'blue_press_pixel.png'
            Image:
                width: self.parent.width
                y: self.parent.y + 0.05*self.parent.height
                height: 0.9*self.parent.height
                source: 'back-1.png'
                keep_ratio: True
                mipmap: True
            

        PlayerDetails:
            id: pd
            board: bc.board
            size_hint: (0.75,1.0)

            wtext: bc.board.wname
            wrank: bc.board.wrank
            btext: bc.board.bname
            brank: bc.board.brank
            next_to_play: bc.board.next_to_play
            on_next_to_play: self.set_to_play(self.next_to_play)

        Spinner:
            id: navspinner
            text: 'Navigate'
            values: ['Navigate','Play','Score','Guess','Zoom']
            size_hint: (0.25,1.0)
            on_text: bc.board.set_navmode(self,self.text)
            option_cls: main.MySpinnerOption

    BoardContainer:
        id: bc
        size_hint: (1.,0.65)

        uielements: {'varbutton': [btn_nextvar]}

    CommentBox:
        id: thecb
        text: bc.board.comment_pre_text + bc.board.comment_text
        size_hint: (1.0,0.18)
        board: bc.board

    Widget:
        size_hint_y: None
        height: (2,'sp')
        canvas:
            Color:
                rgb: (0.195,0.641,0.805)
            Line:
                points: [self.x + 0.05*self.width, self.y + 0.5*self.height, self.x + 0.95*self.width, self.y + 0.5*self.height]
                width: 2
    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1.0,0.09)

        Button:
            id: btn_varbranch
            text: 'Var branch'
            on_release: bc.board.back_to_varbranch()
            background_normal: 'black_pixel.png'
            background_down: 'blue_press_pixel.png'
        PrevButton:
            id: btn_prevmove
            on_press: bc.board.retreat_one_move()
            background_normal: 'black_pixel.png'
            background_down: 'blue_press_pixel.png'
        Button:
            id: btn_nextvar
            text: 'Next var\n (1 / 1)'
            on_press: bc.board.next_variation()
            background_normal: 'black_pixel.png'
            background_down: 'blue_press_pixel.png'
        NextButton:
            board: bc.board
            id: btn_nextmove
            on_press: bc.board.advance_one_move()
            background_normal: 'black_pixel.png'
            background_down: 'blue_press_pixel.png'
        GameOptionsButton:
            id: btn_options
            text: 'Options'
            board: root.board
            background_normal: 'black_pixel.png'
            background_down: 'blue_press_pixel.png'
                
        
<GameOptions>:
    Button:
        size_hint_y: None
        height: (50,'sp')
        text: 'Game info'
        on_press: root.board.view_game_info()
        on_release: root.select('item1')
    Button:
        size_hint_y: None
        height: (50,'sp')
        text: 'Save'
        on_press: root.board.save_sgf()
        on_release: root.select('item2')
    Button:
        size_hint_y: None
        height: (50,'sp')
        text: 'Save as...'
        on_press: root.board.save_sgf(False)
        on_release: root.select('item3')
    
<PickNewVarType>:
    BoxLayout:
        size: self.parent.size
        pos: self.parent.pos
        orientation: "vertical"
        Button:
            text: "...replace next move?"
            text_size: self.parent.width,None
            halign: 'center'
            valign: 'middle'
            on_press: self.parent.parent.board.add_new_stone(self.parent.parent.coord,'replacenext')
            on_release: self.parent.parent.popup.dismiss()
        Button:
            text: "...insert move before next?"
            text_size: self.parent.width,None
            halign: 'center'
            valign: 'middle'
            on_press: self.parent.parent.board.add_new_stone(self.parent.parent.coord,'insert')
            on_release: self.parent.parent.popup.dismiss()
        Button:
            text: "...create new variation?"
            text_size: self.parent.width,None
            halign: 'center'
            valign: 'middle'
            on_press: self.parent.parent.board.add_new_stone(self.parent.parent.coord)
            on_release: self.parent.parent.popup.dismiss()
        Button:
            text: "...create new mainline variation?"
            text_size: self.parent.width,None
            halign: 'center'
            valign: 'middle'
            on_press: self.parent.parent.board.add_new_stone(self.parent.parent.coord,'newmain')
            on_release: self.parent.parent.popup.dismiss()
        Button:
            text: "...cancel?"
            text_size: self.parent.width,None
            halign: 'center'
            valign: 'middle'
            on_press: self.parent.parent.popup.dismiss()

<OpenSGFDialog>:
    BoxLayout:
        size: self.parent.size
        pos: self.parent.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            filters: ['*.sgf']
            path: '.'
        BoxLayout:
            size_hint_y: None
            height: (50,'dp')
            Button:
                text: "Cancel"
                on_release: self.parent.parent.parent.popup.dismiss()
            Button:
                text: "Load"
                on_press: root.manager.new_board(filechooser.selection[0],'Navigate')
                on_release: self.parent.parent.parent.popup.dismiss()

<ButtonTest>:
    text: 'Next var'
    background_colour: self.get_colour(self.board)


<StarPoint>:
    canvas:
        Color:
            rgb: 0,0,0
        Ellipse:
            size: 0.25*self.width, 0.25*self.height
            pos: self.pos[0] + 0.375*self.width, self.pos[1] + 0.375*self.height

<PlayMarker>:
    canvas:
        Color:
            rgba: self.markercolour[0],self.markercolour[1],self.markercolour[2],0.6
        Ellipse:
            pos: self.pos[0] + 0.35*self.width,self.pos[1] + 0.35*self.height
            size: 0.3*self.width, 0.3*self.width

<KoMarker>:
    canvas:
        Color:
            rgb: (0,0,0)
        Line:
            points: [self.pos[0] + 0.2*self.width, self.pos[1]+0.2*self.height, self.pos[0]+0.8*self.width, self.pos[1]+0.2*self.height, self.pos[0]+0.8*self.width,self.pos[1]+0.8*self.height, self.pos[0]+0.2*self.width, self.pos[1]+0.8*self.height]
            close: True
            width: 0.02*self.size[0]
            joint: 'miter'

<TriangleMarker>:
    canvas:
        Color:
            rgb: self.markercolour
        Line:
            points: [self.pos[0] + 0.2*self.size[0], self.pos[1] + 0.3*self.size[1], self.pos[0] + 0.8*self.size[0], self.pos[1]+0.3*self.size[1], self.pos[0]+0.5*self.size[0],self.pos[1]+0.85*self.size[1]]
            close: True
            width: 0.04*self.size[0]
            joint: 'miter'

<SquareMarker>:
    canvas:
        Color:
            rgb: self.markercolour
        Line:
            points: [self.pos[0] + 0.2*self.width, self.pos[1]+0.2*self.height, self.pos[0]+0.8*self.width, self.pos[1]+0.2*self.height, self.pos[0]+0.8*self.width,self.pos[1]+0.8*self.height, self.pos[0]+0.2*self.width, self.pos[1]+0.8*self.height]
            close: True
            width: 0.04*self.size[0]
            joint: 'miter'

<CircleMarker>:
    canvas:
        Color:
            rgb: self.markercolour
        Line:
            points: [self.pos[0],self.pos[1],self.pos[0]+self.width,self.pos[0]+self.height]
            close: True
            width: 0.04*self.size[0]
            circle: (self.pos[0] + 0.5*self.width, self.pos[1]+0.5*self.height, 0.3*self.width, 0, 360, 40)
        
<CrossMarker>:
    canvas:
        Color:
            rgb: self.markercolour
        Line:
            points: [self.pos[0]+0.2*self.width,self.pos[1]+0.2*self.height,self.pos[0]+0.8*self.width,self.pos[1]+0.8*self.height]
            width: 0.04*self.size[0]
        Line:
            points: [self.pos[0]+0.2*self.width,self.pos[1]+0.8*self.height,self.pos[0]+0.8*self.width,self.pos[1]+0.2*self.height]
            width: 0.04*self.size[0]

<TextMarker>:
    canvas.before:
        Color:
            rgb: self.markercolour
    Label:
        color: self.parent.markercolour
        pos: self.parent.pos
        size: self.parent.size
        text: self.parent.text
        halign: 'center'
        valign: 'middle'
        font_size: (0.7*self.height,'px')

        

            

<Stone>:
    canvas:
        Color:
            rgb: 0,0,0
        Ellipse:
            size: self.size
            pos: self.pos

        Color:
            rgb: self.colour
        Ellipse:
            size: (0.9*self.size[0],0.9*self.size[1])
            pos: self.pos[0] + 0.05*self.width, self.pos[1] + 0.05*self.height

<VarStone>:
    canvas:
        Color:
            rgba: 0,0,0,0.5
        Ellipse:
            size: self.size
            pos: self.pos

        Color:
            rgba: self.colour
        Ellipse:
            size: (0.9*self.size[0],0.9*self.size[1])
            pos: self.pos[0] + 0.05*self.width, self.pos[1] + 0.05*self.height
    Label:
        size: self.parent.size
        pos: self.parent.pos
        text: self.parent.text
        color: self.parent.textcolour


<GuiBoard>:
    gobansize: self.size
    showcoords: False
    numcells: self.gridsize + 1 + int(self.showcoords)
    boardindent: float(self.width) / self.numcells, float(self.height) / self.numcells
    boardlength: self.size[0] * float(self.gridsize-1)/self.numcells
    stonesize: (float(self.gobansize[0])/(self.numcells),float(self.gobansize[0])/(self.numcells))
    gridspacing: float(self.width)/(self.numcells)

    on_gridsize: self.draw_starpoints()
    
    canvas:
        Color:
            rgb: (0.980, 0.766, 0.402)
        Rectangle:
            pos: self.gobanpos
            size: self.gobansize

        Color:
            hsv: (0,0,0)
        Line:
            points: [self.gobanpos[0] + self.boardindent[0], self.gobanpos[1] + self.boardindent[1], self.gobanpos[0] + self.width - self.boardindent[0], self.gobanpos[1] + self.boardindent[1], self.gobanpos[0] + self.width - self.boardindent[0], self.gobanpos[1] + self.height - self.boardindent[1], self.gobanpos[0] + self.boardindent[0], self.gobanpos[1] + self.height - self.boardindent[1]]
            width: 1.0
            close: True

        Line:
            points: self.gridlines
            width: 1.0

<BoardContainer>:
    board: theboard

    GuiBoard:
        id: theboard
        size: self.parent.boardsize
        pos: self.parent.boardpos
        uielements: self.parent.uielements

<PlayerDetails>:
    orientation: 'vertical'
    spacing: 1
    wstone: white_stone
    bstone: black_stone
    
    BoxLayout:
        orientation: 'horizontal'
        Widget:
            id: white_stone
            canvas:
                Color:
                    rgba: (0.2,0.2,0.2,1)
                Ellipse:
                    pos: self.pos[0] + 0.05*self.width, self.pos[1] + 0.05*self.height
                    size: (0.9*self.height,0.9*self.height)
                Color:
                    rgb: (1,1,1)
                Ellipse:
                    pos: self.pos[0] + 0.1*self.width, self.pos[1] + 0.1*self.height
                    size: (0.8*self.height,0.8*self.height)
                Color:
                    rgba: self.parent.parent.wtoplaycolour
                Ellipse:
                    pos: self.pos[0] + 0.35*self.width, self.pos[1] + 0.35*self.height
                    size: 0.3*self.width,0.3*self.height
            size: self.parent.height, self.parent.height
            size_hint: None, None
                
        Label:
            text: ''.join(('',self.parent.parent.wtext,' ',self.parent.parent.wrank,''))
            font_size: 0.7*self.height
            markup: True
            text_size: self.width-20, self.height
            halign: 'left'
            valign: 'middle'

    BoxLayout:
        orientation: 'horizontal'
        Widget:
            id: black_stone
            size: self.parent.height, self.parent.height
            canvas:
                Color:
                    rgba: (0.8,0.8,0.8,1)
                Ellipse:
                    pos: self.pos[0] + 0.05*self.width, self.pos[1] + 0.05*self.height
                    size: (0.9*self.height,0.9*self.height)
                Color:
                    rgb: (0,0,0)
                Ellipse:
                    pos: self.pos[0] + 0.1*self.width, self.pos[1] + 0.1*self.height
                    size: (0.8*self.height,0.8*self.height)
                Color:
                    rgba: self.parent.parent.btoplaycolour
                Ellipse:
                    pos: self.pos[0] + 0.35*self.width, self.pos[1] + 0.35*self.height
                    size: 0.3*self.width,0.3*self.height
            size: self.parent.height, self.parent.height
            size_hint: None, None
        Label:
            text: ''.join(('',self.parent.parent.btext,' ',self.parent.parent.brank,''))
            font_size: 0.7*self.height
            markup: True
            text_size: self.width-20, self.height
            halign: 'left'
            valign: 'middle'

        

        

<CommentBox>:
    textbox: thetb
    do_scroll_x: False
    scroll_distance: 5
    scroll_timeout: 250

    on_text: self.scroll_y = 1; self.scroll_timeout=0; self.scroll_timeout = 55

    GridLayout:
        cols: 1
        spacing: 10
        size_hint_y: None
        size: self.parent.textbox.texture_size

        Label:
                
            id: thetb
            text: self.parent.parent.pre_text + self.parent.parent.text
            markup: True
            text_size: self.width-10,None
            size: self.parent.width-10,self.texture_size[1]
            
