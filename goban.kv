#:kivy 1.6.0

<MakeMoveMarker>:
    pos: self.set_position_from_coord(self.coord)
    size: self.board.stonesize
    canvas:
        Color:
            rgba: self.colour
        Ellipse:
            pos: self.pos
            size: self.size
        Color:
            rgb: (0.095,0,0.434)
        Line:
            points: [self.board.x,self.y + 0.5*self.height,self.board.x + self.board.width,self.y + 0.5*self.height]
            width: 2.
            cap: 'none'
        Line:
            points: [self.x + 0.5*self.width,self.board.y,self.x + 0.5*self.width,self.board.y + self.board.height]
            width: 2.
            cap: 'none'
        
        

<HomeScreen>:
    id: homeroot
    orientation: 'vertical'

    Image:
        size_hint: ((1.,0.2))
        mipmap: True
        source: 'logo-1.png'

    GridLayout:
        cols: 2
        Button:
            text: 'Go to board'
            on_press: homeroot.managedby.current = 'Board'
        Button:
            text: 'Also go to board'
            on_press: homeroot.managedby.current = 'Board'
        

<PhoneBoardView>:
    boardcontainer: bc
    board: bc.board

    orientation: 'vertical'

    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1.,0.08)

        Button:
            size_hint: (0.15,1.0)
            text: 'Home'
            on_press: self.parent.parent.managedby.current = 'Home'
            

        PlayerDetails:
            id: pd
            board: bc.board
            size_hint: (0.75,1.0)

            wtext: bc.board.wname
            wrank: bc.board.wrank
            btext: bc.board.bname
            brank: bc.board.brank
            next_to_play: bc.board.next_to_play
            on_next_to_play: self.set_to_play(self.next_to_play)

        Spinner:
            text: 'Navigate'
            values: ['Navigate','Edit','Record','Score']
            size_hint: (0.25,1.0)
            on_text: bc.board.set_navmode(self,self.text)

    BoardContainer:
        id: bc
        size_hint: (1.,0.65)

        uielements: {'varbutton': [btn_nextvar]}

    CommentBox:
        id: thecb
        text: bc.board.comment_pre_text + bc.board.comment_text
        size_hint: (1.0,0.18)

    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1.0,0.09)

        Button:
            id: btn_opensgf
            text: 'Open SGF'
            on_release: bc.board.open_sgf_dialog()
        Button:
            id: btn_prevmove
            text: 'Prev'
            on_press: bc.board.retreat_one_move()
        Button:
            id: btn_nextvar
            text: 'Next var\n (1 / 1)'
            on_press: bc.board.next_variation()
        Button:
            id: btn_nextmove
            text: 'Next'
            on_press: bc.board.advance_one_move()
        Button:
            id: btn_end
            text: 'End'
            on_press: bc.board.jump_to_end()
        




        
    
<PickNewVarType>:
    BoxLayout:
        size: self.parent.size
        pos: self.parent.pos
        orientation: "vertical"
        Button:
            text: "...replace next move?"
            text_size: self.parent.width,None
            halign: 'center'
            valign: 'middle'
            on_press: self.parent.parent.board.add_new_stone(self.parent.parent.coord,'replacenext')
            on_release: self.parent.parent.popup.dismiss()
        Button:
            text: "...insert move before next?"
            text_size: self.parent.width,None
            halign: 'center'
            valign: 'middle'
            on_release: self.parent.parent.popup.dismiss()
        Button:
            text: "...create new variation?"
            text_size: self.parent.width,None
            halign: 'center'
            valign: 'middle'
            on_press: self.parent.parent.board.add_new_stone(self.parent.parent.coord)
            on_release: self.parent.parent.popup.dismiss()
        Button:
            text: "...create new mainline variation?"
            text_size: self.parent.width,None
            halign: 'center'
            valign: 'middle'
            on_press: self.parent.parent.board.add_new_stone(self.parent.parent.coord,'newmain')
            on_release: self.parent.parent.popup.dismiss()
        Button:
            text: "...cancel?"
            text_size: self.parent.width,None
            halign: 'center'
            valign: 'middle'
            on_press: self.parent.parent.popup.dismiss()

<OpenSGFDialog>:
    BoxLayout:
        size: self.parent.size
        pos: self.parent.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            filters: ['*.sgf']
        BoxLayout:
            size_hint_y: None
            height: (50,'dp')
            Button:
                text: "Cancel"
                on_release: self.parent.parent.parent.popup.dismiss()
            Button:
                text: "Load"
                on_press: self.parent.parent.parent.board.load_sgf_from_file(filechooser.path,filechooser.selection)
                on_release: self.parent.parent.parent.popup.dismiss()

<ButtonTest>:
    text: 'Next var'
    background_colour: self.get_colour(self.board)


<StarPoint>:
    canvas:
        Color:
            rgb: 0,0,0
        Ellipse:
            size: 0.25*self.width, 0.25*self.height
            pos: self.pos[0] + 0.375*self.width, self.pos[1] + 0.375*self.height

<PlayMarker>:
    canvas:
        Color:
            rgba: self.markercolour[0],self.markercolour[1],self.markercolour[2],0.6
        Ellipse:
            pos: self.pos[0] + 0.35*self.width,self.pos[1] + 0.35*self.height
            size: 0.3*self.width, 0.3*self.width

<KoMarker>:
    canvas:
        Color:
            rgb: (0,0,0)
        Line:
            points: [self.pos[0] + 0.2*self.width, self.pos[1]+0.2*self.height, self.pos[0]+0.8*self.width, self.pos[1]+0.2*self.height, self.pos[0]+0.8*self.width,self.pos[1]+0.8*self.height, self.pos[0]+0.2*self.width, self.pos[1]+0.8*self.height]
            close: True
            width: 0.02*self.size[0]
            joint: 'miter'

<TriangleMarker>:
    canvas:
        Color:
            rgb: self.markercolour
        Line:
            points: [self.pos[0] + 0.2*self.size[0], self.pos[1] + 0.3*self.size[1], self.pos[0] + 0.8*self.size[0], self.pos[1]+0.3*self.size[1], self.pos[0]+0.5*self.size[0],self.pos[1]+0.85*self.size[1]]
            close: True
            width: 0.04*self.size[0]
            joint: 'miter'

<SquareMarker>:
    canvas:
        Color:
            rgb: self.markercolour
        Line:
            points: [self.pos[0] + 0.2*self.width, self.pos[1]+0.2*self.height, self.pos[0]+0.8*self.width, self.pos[1]+0.2*self.height, self.pos[0]+0.8*self.width,self.pos[1]+0.8*self.height, self.pos[0]+0.2*self.width, self.pos[1]+0.8*self.height]
            close: True
            width: 0.04*self.size[0]
            joint: 'miter'

<CircleMarker>:
    canvas:
        Color:
            rgb: self.markercolour
        Line:
            points: [self.pos[0],self.pos[1],self.pos[0]+self.width,self.pos[0]+self.height]
            close: True
            width: 0.04*self.size[0]
            circle: (self.pos[0] + 0.5*self.width, self.pos[1]+0.5*self.height, 0.3*self.width, 0, 360, 40)
        
<CrossMarker>:
    canvas:
        Color:
            rgb: self.markercolour
        Line:
            points: [self.pos[0]+0.2*self.width,self.pos[1]+0.2*self.height,self.pos[0]+0.8*self.width,self.pos[1]+0.8*self.height]
            width: 0.04*self.size[0]
        Line:
            points: [self.pos[0]+0.2*self.width,self.pos[1]+0.8*self.height,self.pos[0]+0.8*self.width,self.pos[1]+0.2*self.height]
            width: 0.04*self.size[0]

<TextMarker>:
    canvas.before:
        Color:
            rgb: self.markercolour
    Label:
        color: self.parent.markercolour
        pos: self.parent.pos
        size: self.parent.size
        text: self.parent.text
        halign: 'center'
        valign: 'middle'
        font_size: (0.7*self.height,'px')

        

            

<Stone>:
    canvas:
        Color:
            rgb: 0,0,0
        Ellipse:
            size: self.size
            pos: self.pos

        Color:
            rgb: self.colour
        Ellipse:
            size: (0.9*self.size[0],0.9*self.size[1])
            pos: self.pos[0] + 0.05*self.width, self.pos[1] + 0.05*self.height

<GuiBoard>:
    gobansize: self.size
    showcoords: False
    numcells: self.gridsize + 1 + int(self.showcoords)
    boardindent: float(self.width) / self.numcells, float(self.height) / self.numcells
    boardlength: self.size[0] * float(self.gridsize-1)/self.numcells
    stonesize: (float(self.gobansize[0])/(self.numcells),float(self.gobansize[0])/(self.numcells))
    gridspacing: float(self.width)/(self.numcells)

    on_gridsize: self.draw_starpoints()
    
    canvas:
        Color:
            rgb: (0.980, 0.766, 0.402)
        Rectangle:
            pos: self.gobanpos
            size: self.gobansize

        Color:
            hsv: (0,0,0)
        Line:
            points: [self.pos[0] + self.boardindent[0], self.pos[1] + self.boardindent[1], self.pos[0] + self.width - self.boardindent[0], self.pos[1] + self.boardindent[1], self.pos[0] + self.width - self.boardindent[0], self.pos[1] + self.height - self.boardindent[1], self.pos[0] + self.boardindent[0], self.pos[1] + self.height - self.boardindent[1]]
            width: 1.0
            close: True

        Line:
            points: self.gridlines
            width: 1.0

<BoardContainer>:
    board: theboard

    GuiBoard:
        id: theboard
        size: self.parent.boardsize
        pos: self.parent.boardpos
        uielements: self.parent.uielements

<PlayerDetails>:
    orientation: 'vertical'
    spacing: 1
    wstone: white_stone
    bstone: black_stone
    
    BoxLayout:
        orientation: 'horizontal'
        Widget:
            id: white_stone
            canvas:
                Color:
                    rgba: (0.2,0.2,0.2,1)
                Ellipse:
                    pos: self.pos[0] + 0.05*self.width, self.pos[1] + 0.05*self.height
                    size: (0.9*self.height,0.9*self.height)
                Color:
                    rgb: (1,1,1)
                Ellipse:
                    pos: self.pos[0] + 0.1*self.width, self.pos[1] + 0.1*self.height
                    size: (0.8*self.height,0.8*self.height)
                Color:
                    rgba: self.parent.parent.wtoplaycolour
                Ellipse:
                    pos: self.pos[0] + 0.35*self.width, self.pos[1] + 0.35*self.height
                    size: 0.3*self.width,0.3*self.height
            size: self.parent.height, self.parent.height
            size_hint: None, None
                
        Label:
            text: ''.join(('',self.parent.parent.wtext,' ',self.parent.parent.wrank,''))
            font_size: 0.7*self.height
            markup: True
            text_size: self.width-20, self.height
            padding: 10,0
            halign: 'left'
            valign: 'middle'

    BoxLayout:
        orientation: 'horizontal'
        Widget:
            id: black_stone
            size: self.parent.height, self.parent.height
            canvas:
                Color:
                    rgba: (0.8,0.8,0.8,1)
                Ellipse:
                    pos: self.pos[0] + 0.05*self.width, self.pos[1] + 0.05*self.height
                    size: (0.9*self.height,0.9*self.height)
                Color:
                    rgb: (0,0,0)
                Ellipse:
                    pos: self.pos[0] + 0.1*self.width, self.pos[1] + 0.1*self.height
                    size: (0.8*self.height,0.8*self.height)
                Color:
                    rgba: self.parent.parent.btoplaycolour
                Ellipse:
                    pos: self.pos[0] + 0.35*self.width, self.pos[1] + 0.35*self.height
                    size: 0.3*self.width,0.3*self.height
            size: self.parent.height, self.parent.height
            size_hint: None, None
        Label:
            text: ''.join(('',self.parent.parent.btext,' ',self.parent.parent.brank,''))
            font_size: 0.7*self.height
            markup: True
            text_size: self.width-20, self.height
            padding: 10,0
            halign: 'left'
            valign: 'middle'

        

        

<CommentBox>:
    textbox: thetb
    do_scroll_x: False
    scroll_distance: 5
    scroll_timeout: 250

    on_text: self.scroll_y = 1; self.scroll_timeout=0; self.scroll_timeout = 55

    GridLayout:
        cols: 1
        spacing: 10
        size_hint_y: None
        size: self.parent.textbox.texture_size

        Label:
                
            id: thetb
            text: self.parent.parent.pre_text + self.parent.parent.text
            markup: True
            text_size: self.width-10,None
            padding: 10,10
            size: self.parent.width,self.texture_size[1]
            
